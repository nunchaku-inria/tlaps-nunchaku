

val u : type.

val emptyset : u.
val mem : u -> u -> u.

val is_true : u -> prop.

axiom forall x. ~ is_true (mem x emptyset).

# ext
axiom forall x y. (x = y) = (forall z. is_true (mem z x) = is_true (mem z y)).

pred trans_mem : u -> u -> prop :=
  forall x y. is_true (mem x y) => trans_mem x y;
  forall x y z. is_true (mem x y) && trans_mem y z => trans_mem x z.

# well-founded
axiom forall x. ~ (trans_mem x x).

# goals

# goal exists a b. ~ is_true (mem a b).
# goal exists a b. is_true (mem a b).

# FIXME
goal exists a. ~ is_true (mem (choice (fun x. ~ is_true (mem x a))) a).

